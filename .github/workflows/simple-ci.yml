name: Simple CI - Personal Development

on:
  push:
    branches: [master, dev]
  pull_request:
    branches: [master]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'

defaults:
  run:
    working-directory: apps/web

jobs:
  # 必須チェック: ビルド
  build:
    name: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        env:
          NEXT_PUBLIC_BASE_URL: http://localhost:3000
          NEXT_PUBLIC_SANITY_PROJECT_ID: demo
          NEXT_PUBLIC_SANITY_DATASET: production
        run: pnpm run build

  # 必須チェック: パフォーマンス/バンドル品質ゲート
  quality-gates:
    name: quality-gates
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies (root)
        working-directory: .
        run: pnpm install --frozen-lockfile

      - name: Run Lighthouse CI (performance)
        working-directory: .
        env:
          NEXT_PUBLIC_BASE_URL: http://localhost:3000
        run: npm run test:performance

      - name: Check bundle size budget
        working-directory: .
        run: npm run perf:bundle

  # 必須チェック: テスト
  test:
    name: test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm run test

  # アクセシビリティ（axe + Playwright）
  a11y:
    name: accessibility
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run accessibility tests (axe)
        run: pnpm run test:accessibility

  # ブラウザ互換性（Playwrightスモーク）
  browser-compat:
    name: browser-compat
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Playwright E2E (compat smoke)
        run: pnpm run test:e2e

  # 任意チェック: フォーマット
  format:
    name: format
    runs-on: ubuntu-latest
    timeout-minutes: 5
    continue-on-error: true  # 失敗してもワークフロー全体は成功
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check format
        run: pnpm run format:check

  # 任意チェック: Lint
  lint:
    name: lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    continue-on-error: true  # 失敗してもワークフロー全体は成功
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run lint
        run: pnpm run lint

  # 任意チェック: 型チェック
  typecheck:
    name: typecheck
    runs-on: ubuntu-latest
    timeout-minutes: 5
    continue-on-error: true  # 失敗してもワークフロー全体は成功
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run typecheck
        env:
          NEXT_PUBLIC_BASE_URL: http://localhost:3000
          NEXT_PUBLIC_SANITY_PROJECT_ID: demo
          NEXT_PUBLIC_SANITY_DATASET: production
        run: pnpm run typecheck
