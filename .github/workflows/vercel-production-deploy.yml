name: Vercel Production Deploy

on:
  push:
    branches: [master]
  workflow_dispatch:

concurrency:
  group: vercel-production-${{ github.ref }}
  cancel-in-progress: false

env:
  NODE_VERSION: '20'

jobs:
  deploy:
    name: Deploy to Vercel Production
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Deploy to Vercel Production
        uses: amondnet/vercel-action@v25
        id: vercel-deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./

      - name: Wait for Deployment to be Ready
        run: |
          echo "Deployment URL: ${{ steps.vercel-deploy.outputs.preview-url }}"
          echo "Waiting 60 seconds for deployment to be ready..."
          sleep 60

      - name: Install dependencies for verification
        run: npm install chalk

      - name: Verify Production Deployment
        id: verify-deployment
        env:
          DEPLOYMENT_URL: ${{ steps.vercel-deploy.outputs.preview-url }}
        run: |
          echo "üîç Verifying deployment..."
          echo "Deployment URL: $DEPLOYMENT_URL"
          
          if [ -n "$DEPLOYMENT_URL" ]; then
            if curl -f -s "$DEPLOYMENT_URL" > /dev/null; then
              echo "‚úÖ Deployment is accessible"
            else
              echo "‚ùå Deployment verification failed"
              exit 1
            fi
          else
            echo "‚ùå No deployment URL found"
            exit 1
          fi

      - name: Test Custom Domain
        id: test-domain
        continue-on-error: true
        run: |
          echo "üîç Testing custom domain..."
          
          # Wait a bit more for domain propagation
          sleep 30
          
          # Test suptia.com
          if curl -f -s -I https://suptia.com > /dev/null 2>&1; then
            echo "‚úÖ suptia.com is accessible"
            echo "domain_status=success" >> $GITHUB_OUTPUT
          else
            echo "‚ö†Ô∏è suptia.com is not yet accessible"
            echo "domain_status=pending" >> $GITHUB_OUTPUT
          fi
          
          # Test www.suptia.com
          if curl -f -s -I https://www.suptia.com > /dev/null 2>&1; then
            echo "‚úÖ www.suptia.com is accessible"
          else
            echo "‚ö†Ô∏è www.suptia.com is not yet accessible"
          fi

      - name: Create Success Comment
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEPLOYMENT_URL: ${{ steps.vercel-deploy.outputs.preview-url }}
          DOMAIN_STATUS: ${{ steps.test-domain.outputs.domain_status }}
        run: |
          # ÊúÄÊñ∞„ÅÆPR„Å´„Ç≥„É°„É≥„Éà„ÇíËøΩÂä†Ôºà„ÇÇ„Åó„ÅÇ„Çå„Å∞Ôºâ
          LATEST_PR=$(gh pr list --state merged --limit 1 --json number --jq '.[0].number' || echo "")
          
          if [ -n "$LATEST_PR" ]; then
            COMMENT_BODY="üöÄ **Production Deployment Successful**

Deployment URL: $DEPLOYMENT_URL
Commit: \`${{ github.sha }}\`
Domain Status: ${{ steps.test-domain.outputs.domain_status == 'success' && '‚úÖ Ready' || '‚ö†Ô∏è Propagating' }}

The production environment has been successfully updated.
"
            
            gh pr comment $LATEST_PR --body "$COMMENT_BODY" || echo "Could not add comment to PR"
          fi

      - name: Notify Deployment Failure
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "‚ùå Production deployment failed"
          
          # Create an issue for deployment failure
          gh issue create \
            --title "üö® Production Deployment Failed - $(date '+%Y-%m-%d %H:%M')" \
            --body "**Production deployment failed**

**Details:**
- Workflow: ${{ github.workflow }}
- Run ID: ${{ github.run_id }}
- Commit: \`${{ github.sha }}\`
- Branch: \`${{ github.ref_name }}\`

**Action Required:**
1. Check workflow logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
2. Verify Vercel project settings
3. Check environment variables
4. Retry deployment if needed

**Logs:** Available in workflow artifacts" \
            --label "deployment,production,urgent" \
            --assignee "${{ github.actor }}" || echo "Could not create issue"

      - name: Upload Deployment Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vercel-production-deployment-logs
          path: |
            vercel-*.log
            deployment-*.json
          retention-days: 30