name: Pharmaceutical Law Compliance Check\n\non:\n  pull_request:\n    branches: [main, develop]\n    paths:\n      - 'apps/web/src/**/*.{ts,tsx,js,jsx}'\n      - 'apps/web/src/**/*.md'\n      - 'apps/web/public/**/*.{html,txt}'\n      - 'scripts/lint-compliance.ts'\n      - '.github/workflows/compliance-check.yml'\n  push:\n    branches: [main, develop]\n    paths:\n      - 'apps/web/src/**/*.{ts,tsx,js,jsx}'\n      - 'apps/web/src/**/*.md'\n      - 'apps/web/public/**/*.{html,txt}'\n      - 'scripts/lint-compliance.ts'\n      - '.github/workflows/compliance-check.yml'\n\njobs:\n  compliance-check:\n    name: Check Pharmaceutical Law Compliance\n    runs-on: ubuntu-latest\n    \n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n        with:\n          fetch-depth: 0\n\n      - name: Setup Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: '18'\n          cache: 'npm'\n\n      - name: Install dependencies\n        run: |\n          npm ci\n          npm install -g tsx glob\n\n      - name: Run compliance check\n        id: compliance\n        run: |\n          echo \"Running pharmaceutical law compliance check...\"\n          tsx scripts/lint-compliance.ts --verbose > compliance-report.txt 2>&1 || true\n          \n          # Check if there are violations\n          if tsx scripts/lint-compliance.ts --json | jq -r '.violationFiles' | grep -q '^0$'; then\n            echo \"compliant=true\" >> $GITHUB_OUTPUT\n            echo \"violations=0\" >> $GITHUB_OUTPUT\n          else\n            echo \"compliant=false\" >> $GITHUB_OUTPUT\n            VIOLATIONS=$(tsx scripts/lint-compliance.ts --json | jq -r '.totalViolations')\n            echo \"violations=$VIOLATIONS\" >> $GITHUB_OUTPUT\n          fi\n\n      - name: Upload compliance report\n        uses: actions/upload-artifact@v4\n        if: always()\n        with:\n          name: compliance-report\n          path: compliance-report.txt\n          retention-days: 30\n\n      - name: Comment PR with compliance results\n        if: github.event_name == 'pull_request'\n        uses: actions/github-script@v7\n        with:\n          script: |\n            const fs = require('fs');\n            const path = require('path');\n            \n            // Read compliance report\n            let report = '';\n            try {\n              report = fs.readFileSync('compliance-report.txt', 'utf8');\n            } catch (error) {\n              report = 'Could not read compliance report.';\n            }\n            \n            const isCompliant = '${{ steps.compliance.outputs.compliant }}' === 'true';\n            const violations = '${{ steps.compliance.outputs.violations }}';\n            \n            let commentBody = '';\n            \n            if (isCompliant) {\n              commentBody = `## ‚úÖ Pharmaceutical Law Compliance Check Passed\n            \n            All files are compliant with pharmaceutical law regulations.\n            \n            **Summary:**\n            - No compliance violations found\n            - All content follows safe expression guidelines\n            \n            Great job maintaining compliance! üéâ`;\n            } else {\n              commentBody = `## ‚ùå Pharmaceutical Law Compliance Check Failed\n            \n            **${violations} compliance violation(s) found.**\n            \n            Please review and fix the violations before merging. The violations may include:\n            - Medical effect claims that should be replaced with \"support\" expressions\n            - Disease names that should be avoided\n            - Guarantee expressions that need to be softened\n            - Superlative expressions that may be misleading\n            \n            <details>\n            <summary>üìã Detailed Compliance Report</summary>\n            \n            \\`\\`\\`\n            ${report.length > 50000 ? report.substring(0, 50000) + '\\n\\n... (truncated)' : report}\n            \\`\\`\\`\n            \n            </details>\n            \n            ### üí° How to Fix\n            \n            1. Review the violations listed above\n            2. Replace prohibited terms with suggested alternatives\n            3. Use safe expressions like \"support\", \"maintain\", \"supplement\"\n            4. Avoid medical claims and disease names\n            5. Run \\`npm run lint:compliance\\` locally to verify fixes\n            \n            ### üìö Resources\n            \n            - [Pharmaceutical Law Guidelines](docs/compliance-guidelines.md)\n            - [Safe Expression Dictionary](apps/web/src/lib/diagnosis/compliance-checker.ts)\n            `;\n            }\n            \n            // Find existing compliance comment\n            const { data: comments } = await github.rest.issues.listComments({\n              owner: context.repo.owner,\n              repo: context.repo.repo,\n              issue_number: context.issue.number,\n            });\n            \n            const existingComment = comments.find(comment => \n              comment.user.type === 'Bot' && \n              comment.body.includes('Pharmaceutical Law Compliance Check')\n            );\n            \n            if (existingComment) {\n              // Update existing comment\n              await github.rest.issues.updateComment({\n                owner: context.repo.owner,\n                repo: context.repo.repo,\n                comment_id: existingComment.id,\n                body: commentBody\n              });\n            } else {\n              // Create new comment\n              await github.rest.issues.createComment({\n                owner: context.repo.owner,\n                repo: context.repo.repo,\n                issue_number: context.issue.number,\n                body: commentBody\n              });\n            }\n\n      - name: Set status check\n        if: always()\n        uses: actions/github-script@v7\n        with:\n          script: |\n            const isCompliant = '${{ steps.compliance.outputs.compliant }}' === 'true';\n            const violations = '${{ steps.compliance.outputs.violations }}';\n            \n            await github.rest.repos.createCommitStatus({\n              owner: context.repo.owner,\n              repo: context.repo.repo,\n              sha: context.sha,\n              state: isCompliant ? 'success' : 'failure',\n              target_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,\n              description: isCompliant \n                ? 'All files comply with pharmaceutical law' \n                : `${violations} compliance violation(s) found`,\n              context: 'compliance/pharmaceutical-law'\n            });\n\n      - name: Fail on violations (strict mode)\n        if: steps.compliance.outputs.compliant == 'false' && github.ref == 'refs/heads/main'\n        run: |\n          echo \"‚ùå Compliance violations found on main branch!\"\n          echo \"This is a critical issue that must be fixed immediately.\"\n          exit 1\n\n  compliance-summary:\n    name: Compliance Summary\n    runs-on: ubuntu-latest\n    needs: compliance-check\n    if: always()\n    \n    steps:\n      - name: Download compliance report\n        uses: actions/download-artifact@v4\n        with:\n          name: compliance-report\n          \n      - name: Generate summary\n        run: |\n          echo \"## üìã Pharmaceutical Law Compliance Summary\" >> $GITHUB_STEP_SUMMARY\n          echo \"\" >> $GITHUB_STEP_SUMMARY\n          \n          if [ \"${{ needs.compliance-check.outputs.compliant }}\" = \"true\" ]; then\n            echo \"‚úÖ **Status:** All files are compliant\" >> $GITHUB_STEP_SUMMARY\n            echo \"üéâ **Result:** No violations found\" >> $GITHUB_STEP_SUMMARY\n          else\n            echo \"‚ùå **Status:** Compliance violations detected\" >> $GITHUB_STEP_SUMMARY\n            echo \"‚ö†Ô∏è **Violations:** ${{ needs.compliance-check.outputs.violations }}\" >> $GITHUB_STEP_SUMMARY\n            echo \"\" >> $GITHUB_STEP_SUMMARY\n            echo \"### üîß Next Steps\" >> $GITHUB_STEP_SUMMARY\n            echo \"1. Review the detailed report in the artifacts\" >> $GITHUB_STEP_SUMMARY\n            echo \"2. Fix violations using suggested alternatives\" >> $GITHUB_STEP_SUMMARY\n            echo \"3. Run \\`npm run lint:compliance\\` locally\" >> $GITHUB_STEP_SUMMARY\n            echo \"4. Commit and push the fixes\" >> $GITHUB_STEP_SUMMARY\n          fi\n          \n          echo \"\" >> $GITHUB_STEP_SUMMARY\n          echo \"### üìä Compliance Report\" >> $GITHUB_STEP_SUMMARY\n          echo \"\\`\\`\\`\" >> $GITHUB_STEP_SUMMARY\n          head -50 compliance-report.txt >> $GITHUB_STEP_SUMMARY\n          echo \"\\`\\`\\`\" >> $GITHUB_STEP_SUMMARY\n