name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  NODE_VERSION: '20'

jobs:
  format:
    name: format:check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'apps/web/package-lock.json'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: npm ci
        working-directory: apps/web

      - name: Check formatting
        run: npm run format:check
        working-directory: apps/web

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'apps/web/package-lock.json'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: npm ci
        working-directory: apps/web

      - name: Run linter
        run: npm run lint
        working-directory: apps/web

  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'apps/web/package-lock.json'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: npm ci
        working-directory: apps/web

      - name: Run tests
        run: npm run test
        working-directory: apps/web

  typecheck:
    name: typecheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'apps/web/package-lock.json'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: npm ci
        working-directory: apps/web

      - name: Type check
        run: npm run typecheck
        working-directory: apps/web

  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'apps/web/package-lock.json'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: npm ci
        working-directory: apps/web

      - name: Build application
        run: npm run build
        working-directory: apps/web