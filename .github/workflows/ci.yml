name: CI/CD Pipeline

on:
  push:
    branches: [master, dev]
  pull_request:
    branches: [master]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'

defaults:
  run:
    working-directory: apps/web

jobs:
  secrets-scan:
    name: secrets-scan
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fail if any .env or .env.local files are tracked
        run: |
          set -e
          tracked=$(git ls-files | rg -n '(^|/)\.env(\..*)?$|(^|/)\.env\.local$' || true)
          if [ -n "$tracked" ]; then
            echo "Found tracked env files:" && echo "$tracked"
            exit 1
          fi
          echo "No tracked env files detected."

  format:
    name: format:check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Check formatting
        run: pnpm run format:check

  lint:
    name: lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Run linter
        run: pnpm run lint

  test:
    name: test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Run tests
        run: pnpm run test

  typecheck:
    name: typecheck
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      NEXT_PUBLIC_BASE_URL: http://localhost:3000
      NEXT_PUBLIC_SANITY_PROJECT_ID: demo
      NEXT_PUBLIC_SANITY_DATASET: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Type check
        run: pnpm run typecheck

  build:
    name: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      NEXT_PUBLIC_BASE_URL: http://localhost:3000
      NEXT_PUBLIC_SANITY_PROJECT_ID: demo
      NEXT_PUBLIC_SANITY_DATASET: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Build application
        run: pnpm run build

  headers:
    name: headers
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build
    env:
      NEXT_PUBLIC_BASE_URL: http://localhost:3000
      NEXT_PUBLIC_SANITY_PROJECT_ID: demo
      NEXT_PUBLIC_SANITY_DATASET: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Build application
        run: pnpm run build

      - name: Start application
        run: pnpm start &

      - name: Wait for application
        run: npx wait-on http://localhost:3000

      - name: Check headers
        run: node scripts/check-headers.mjs

  jsonld:
    name: jsonld
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build
    env:
      NEXT_PUBLIC_BASE_URL: http://localhost:3000
      NEXT_PUBLIC_SANITY_PROJECT_ID: demo
      NEXT_PUBLIC_SANITY_DATASET: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Build application
        run: pnpm run build

      - name: Start application
        run: pnpm start &

      - name: Wait for application
        run: npx wait-on http://localhost:3000

      - name: Validate JSON-LD
        run: node scripts/validate-jsonld.mjs

  audit:
    name: audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Run security audit
        run: pnpm audit --audit-level moderate || true

  lighthouse:
    name: lighthouse (non-blocking)
    runs-on: ubuntu-latest
    needs: build
    continue-on-error: true
    env:
      NEXT_PUBLIC_BASE_URL: http://localhost:3000
      NEXT_PUBLIC_SANITY_PROJECT_ID: demo
      NEXT_PUBLIC_SANITY_DATASET: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Build application
        run: pnpm run build

      - name: Start application
        run: pnpm start &

      - name: Wait for application
        run: npx wait-on http://localhost:3000

      - name: Run Lighthouse
        run: npx lighthouse http://localhost:3000 --output=json --output-path=./lighthouse-results.json || echo "Lighthouse check completed"

  pr-dod-check:
    name: pr-dod-check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run Definition of Done Check
        run: node scripts/check-dod.mjs
