name: CI/CD Pipeline

on:
  push:
    branches: [master, dev]
  pull_request:
    branches: [master]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'

defaults:
  run:
    working-directory: apps/web

jobs:
  # 依存関係のセットアップ
  setup:
    name: setup-dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 8
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
      node-modules-key: ${{ steps.node-modules-key.outputs.key }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Generate cache keys
        id: cache-key
        run: |
          echo "key=pnpm-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}" >> $GITHUB_OUTPUT

      - name: Generate node_modules cache key
        id: node-modules-key
        run: |
          echo "key=node-modules-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}" >> $GITHUB_OUTPUT

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.local/share/pnpm/store
          key: ${{ steps.cache-key.outputs.key }}
          restore-keys: |
            pnpm-${{ runner.os }}-

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: |
            apps/web/node_modules
            node_modules
          key: ${{ steps.node-modules-key.outputs.key }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile --ignore-scripts

  # 品質チェック（並列実行）
  format:
    name: format
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: |
            apps/web/node_modules
            node_modules
          key: ${{ needs.setup.outputs.node-modules-key }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - name: Run format check
        run: pnpm run format:check

  lint:
    name: lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: |
            apps/web/node_modules
            node_modules
          key: ${{ needs.setup.outputs.node-modules-key }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - name: Run lint
        run: pnpm run lint

  test:
    name: test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: |
            apps/web/node_modules
            node_modules
          key: ${{ needs.setup.outputs.node-modules-key }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - name: Run tests
        run: pnpm run test

  typecheck:
    name: typecheck
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: setup
    env:
      NEXT_PUBLIC_BASE_URL: http://localhost:3000
      NEXT_PUBLIC_SANITY_PROJECT_ID: demo
      NEXT_PUBLIC_SANITY_DATASET: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: |
            apps/web/node_modules
            node_modules
          key: ${{ needs.setup.outputs.node-modules-key }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - name: Run typecheck
        run: pnpm run typecheck

  build:
    name: build
    runs-on: ubuntu-latest
    timeout-minutes: 12
    needs: setup
    env:
      NEXT_PUBLIC_BASE_URL: http://localhost:3000
      NEXT_PUBLIC_SANITY_PROJECT_ID: demo
      NEXT_PUBLIC_SANITY_DATASET: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: |
            apps/web/node_modules
            node_modules
          key: ${{ needs.setup.outputs.node-modules-key }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - name: Build application
        run: pnpm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            apps/web/.next
            apps/web/package.json
          retention-days: 1

  # ランタイムチェック（ビルド成果物が必要）
  headers:
    name: headers
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [setup, build]
    env:
      NEXT_PUBLIC_BASE_URL: http://localhost:3000
      NEXT_PUBLIC_SANITY_PROJECT_ID: demo
      NEXT_PUBLIC_SANITY_DATASET: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: |
            apps/web/node_modules
            node_modules
          key: ${{ needs.setup.outputs.node-modules-key }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: apps/web

      - name: Start application
        run: |
          pnpm start &
          APP_PID=$!
          echo "APP_PID=$APP_PID" >> $GITHUB_ENV

      - name: Wait for application
        run: npx wait-on http://localhost:3000 --timeout 30000

      - name: Run headers check
        run: node scripts/check-headers.mjs

      - name: Stop application
        if: always()
        run: |
          if [ -n "$APP_PID" ]; then
            kill $APP_PID || true
          fi

  jsonld:
    name: jsonld
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [setup, build]
    env:
      NEXT_PUBLIC_BASE_URL: http://localhost:3000
      NEXT_PUBLIC_SANITY_PROJECT_ID: demo
      NEXT_PUBLIC_SANITY_DATASET: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: |
            apps/web/node_modules
            node_modules
          key: ${{ needs.setup.outputs.node-modules-key }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: apps/web

      - name: Start application
        run: |
          pnpm start &
          APP_PID=$!
          echo "APP_PID=$APP_PID" >> $GITHUB_ENV

      - name: Wait for application
        run: npx wait-on http://localhost:3000 --timeout 30000

      - name: Run JSON-LD validation
        run: node scripts/validate-jsonld.mjs

      - name: Stop application
        if: always()
        run: |
          if [ -n "$APP_PID" ]; then
            kill $APP_PID || true
          fi

  # PR専用チェック
  pr-dod-check:
    name: pr-dod-check
    runs-on: ubuntu-latest
    timeout-minutes: 8
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run Definition of Done Check
        run: node scripts/check-dod.mjs